{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Combined CloudFormation template for Serverless ElastiCache Valkey and EC2 instance",
    "Parameters": {
      "VpcId": {
        "Type": "AWS::EC2::VPC::Id",
        "Description": "Select a VPC for the security group"
      },
      "Ec2SubnetId": {
        "Type": "AWS::EC2::Subnet::Id",
        "Description": "Select a subnet for the EC2 instance"
      },
      "KeyName": {
        "Type": "AWS::EC2::KeyPair::KeyName",
        "Description": "Name of an existing EC2 KeyPair to enable SSH access",
        "ConstraintDescription": "Must be the name of an existing EC2 KeyPair"
      },
      "MyIP": {
        "Description": "Your IP address for security group access (x.x.x.x/32)",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/32"
      },
      "ValkeySubnetIds": {
        "Type": "List<AWS::EC2::Subnet::Id>",
        "Description": "Select two subnets for the serverless cache"
      }
    },
    "Resources": {
      "CombinedValkeyWithEC2TunnelSG": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Enable SSH access via port 22",
          "VpcId": {
            "Ref": "VpcId"
          },
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "22",
              "ToPort": "22",
              "CidrIp": {
                "Ref": "MyIP"
              }
            }
          ]
        }
      },
      "CombinedValkeyWithEC2TunnelEC2Instance": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "InstanceType": "t4g.nano",
          "SubnetId": {
            "Ref": "Ec2SubnetId"
          },
          "KeyName": {
            "Ref": "KeyName"
          },
          "SecurityGroupIds": [
            {
              "Ref": "CombinedValkeyWithEC2TunnelSG"
            }
          ],
          "ImageId": "ami-07dcfc8123b5479a8",
          "UserData": {
            "Fn::Base64": {
                "Fn::Join": [
                  "",
                  [
                    "#!/bin/bash\n",
                    "yum update -y\n",
                    "sudo yum install gcc jemalloc-devel openssl-devel tcl tcl-devel -y\n",
                    "wget https://github.com/valkey-io/valkey/archive/refs/tags/7.2.7.tar.gz\n",
                    "tar xvzf 7.2.7.tar.gz\n",
                    "cd valkey-7.2.7/\n",
                    "make BUILD_TLS=yes install\n"
                  ]
                ]
              }
          }
        }
      },
      "CombinedValkeyWithEC2TunnelElasticacheSG": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Enable Redis/Valkey access via port 6370-6380",
          "VpcId": {
            "Ref": "VpcId"
          },
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "6379",
              "ToPort": "6380",
              "SourceSecurityGroupId": {
                "Ref": "CombinedValkeyWithEC2TunnelSG"
              }
            }
          ]
        }
      },
      "ServerlessCache": {
        "Type": "AWS::ElastiCache::ServerlessCache",
        "Properties": {
          "ServerlessCacheName": "CombinedValkeyWithEC2TunnelValkey",
          "Engine": "valkey",
          "DailySnapshotTime": "04:00",
          "SnapshotRetentionLimit": 7,
          "Tags": [
            {
              "Key": "Project",
              "Value": "valkey-test"
            }
          ],
          "SecurityGroupIds": [
            {
              "Ref": "CombinedValkeyWithEC2TunnelElasticacheSG"
            }
          ],
          "SubnetIds": [
            {
              "Fn::Select": [
                "0",
                {
                  "Ref": "ValkeySubnetIds"
                }
              ]
            },
            {
              "Fn::Select": [
                "1",
                {
                  "Ref": "ValkeySubnetIds"
                }
              ]
            }
          ]
        }
      }
    },
    "Outputs": {
      "ServerlessCacheId": {
        "Description": "ID of the serverless cache",
        "Value": {
          "Ref": "ServerlessCache"
        }
      },
      "ServerlessCacheEndpoint": {
        "Description": "Endpoint for the serverless cache",
        "Value": {
          "Fn::GetAtt": [
            "ServerlessCache",
            "Endpoint.Address"
          ]
        }
      },
      "InstanceId": {
        "Description": "Instance ID of the newly created EC2 instance",
        "Value": {
          "Ref": "CombinedValkeyWithEC2TunnelEC2Instance"
        }
      },
      "PublicDNS": {
        "Description": "Public DNSName of the newly created EC2 instance",
        "Value": {
          "Fn::GetAtt": [
            "CombinedValkeyWithEC2TunnelEC2Instance",
            "PublicDnsName"
          ]
        }
      },
      "PublicIP": {
        "Description": "Public IP address of the newly created EC2 instance",
        "Value": {
          "Fn::GetAtt": [
            "CombinedValkeyWithEC2TunnelEC2Instance",
            "PublicIp"
          ]
        }
      },
      "SSHCommand": {
        "Description": "Command to SSH into the instance",
        "Value": {
          "Fn::Sub": "ssh -i ${KeyName}.pem ec2-user@${CombinedValkeyWithEC2TunnelEC2Instance.PublicIp}"
        }
      },
      "ValkeyTunnelCommand": {
        "Description": "Command to set up tunnel to access Valkey from local machine (runs in verbose mode in a separate shell window)",
        "Value": {
          "Fn::Sub": "ssh -NT -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -o ExitOnForwardFailure=yes -i ${KeyName}.pem  -v -N -L 6379:${ServerlessCache.Endpoint.Address}:6379 ec2-user@${CombinedValkeyWithEC2TunnelEC2Instance.PublicIp}"
        }
      }
    }
  }